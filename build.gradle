plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'maven-publish'
}

group = 'com.osrshiscores'
version = '1.0-SNAPSHOT'

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.9.0'
    
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

application {
    mainClass = 'com.osrshiscores.apiclient.example.Example'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

checkstyle {
    toolVersion = '10.12.5'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = false
}

pmd {
    toolVersion = '6.55.0'
    ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
    ruleSets = []
    ignoreFailures = false
}

tasks.named('check').configure {
    dependsOn 'checkstyleMain', 'checkstyleTest', 'pmdMain', 'pmdTest'
}

// Ensure the example class is included in the jar
jar {
    manifest {
        attributes 'Main-Class': 'com.osrshiscores.apiclient.example.Example'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Configure publishing
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'osrs-hiscores'
            
            pom {
                name = 'osrs-hiscores'
                description = 'A Java client for the Old School RuneScape Hiscores API'
                groupId = 'com.osrshiscores'
            }
        }
    }

    repositories {
        if (System.getenv('CODEARTIFACT_REPOSITORY_URL') != null) {
            maven {
                name = 'CodeArtifact'
                url = System.getenv('CODEARTIFACT_REPOSITORY_URL')
                credentials {
                    username = "aws"
                    password = System.getenv('CODEARTIFACT_AUTH_TOKEN')
                }
            }
        }
    }
}

// Task to publish all artifacts
task publishArtifacts {
    description = 'Publishes all artifacts to AWS CodeArtifact'
    group = 'publishing'
    dependsOn tasks.withType(PublishToMavenRepository).matching { 
        it.repository == publishing.repositories.findByName('CodeArtifact') 
    }
}
